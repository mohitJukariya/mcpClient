Write-Host "Testing Gas Price Query (No Disclaimers)" -ForegroundColor Cyan
Write-Host "==========================================" -ForegroundColor Cyan

try {
    $body = @{
        message = "get current gas price"
    } | ConvertTo-Json
    
    Write-Host "Sending request..." -ForegroundColor Gray
    $response = Invoke-RestMethod -Uri "http://localhost:3000/api/chat" -Method POST -ContentType "application/json" -Body $body -TimeoutSec 30
    
    Write-Host "Response received!" -ForegroundColor Green
    Write-Host ""
    Write-Host "RESULT:" -ForegroundColor Cyan
    Write-Host "=======" -ForegroundColor Cyan
    Write-Host $response.response -ForegroundColor White
    Write-Host ""
    
    if ($response.toolsUsed -and $response.toolsUsed.Count -gt 0) {
        Write-Host "Tool Used: $($response.toolsUsed[0].name)" -ForegroundColor Green
    }
    
    # Check for disclaimers
    $disclaimerPatterns = @(
        "Note:",
        "This response is generated by an AI",
        "real-time data",
        "simulated conversation",
        "not actually implemented"
    )
    
    $foundDisclaimers = @()
    foreach ($pattern in $disclaimerPatterns) {
        if ($response.response -match [regex]::Escape($pattern)) {
            $foundDisclaimers += $pattern
        }
    }
    
    if ($foundDisclaimers.Count -eq 0) {
        Write-Host ""
        Write-Host "✅ SUCCESS: No disclaimers found!" -ForegroundColor Green
    } else {
        Write-Host ""
        Write-Host "❌ FOUND DISCLAIMERS:" -ForegroundColor Red
        foreach ($disclaimer in $foundDisclaimers) {
            Write-Host "  - $disclaimer" -ForegroundColor Red
        }
    }
    
} catch {
    Write-Host "Error: $($_.Exception.Message)" -ForegroundColor Red
}
